Traceback (most recent call last):
  File "/Users/carlosdavid/miniconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/carlosdavid/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/carlosdavid/miniconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/carlosdavid/miniconda3/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/carlosdavid/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/carlosdavid/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/carlosdavid/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Create a figure
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Define ranges for temperature (T) and pressure (P)
T = np.linspace(300, 700, 50)  # Temperature from 300K to 700K
P = np.linspace(1, 10, 50)     # Pressure from 1 to 10 atm
T, P = np.meshgrid(T, P)

# Equation for volume V, assume ideal gas law: PV = nRT
R = 0.0821  # LÂ·atm/molÂ·K (Ideal gas constant)
n = 1       # Assume 1 mole of gas
V = (n * R * T) / P  # Ideal gas law rearranged to V = nRT / P

# Plot the surface in color
surf = ax.plot_surface(P, T, V, cmap='plasma', edgecolor='none')

# Color bar for the surface
fig.colorbar(surf, ax=ax, shrink=0.5, aspect=5)

# Label axes with units
ax.set_xlabel('Pressure (P) [atm]', fontsize=12)
ax.set_ylabel('Temperature (T) [K]', fontsize=12)
ax.set_zlabel('Volume (V) [L]', fontsize=12)

# Rotate the plot by 90 degrees
ax.view_init(elev=40, azim=50)  # azim=90 rotates it by 90 degrees

plt.show()
------------------


[31m---------------------------------------------------------------------------[39m
[31mModuleNotFoundError[39m                       Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[1][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mnumpy[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mnp[39;00m
[32m      2[39m [38;5;28;01mimport[39;00m[38;5;250m [39m[34;01mmatplotlib[39;00m[34;01m.[39;00m[34;01mpyplot[39;00m[38;5;250m [39m[38;5;28;01mas[39;00m[38;5;250m [39m[34;01mplt[39;00m
[32m      3[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mmpl_toolkits[39;00m[34;01m.[39;00m[34;01mmplot3d[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m Axes3D

[31mModuleNotFoundError[39m: No module named 'numpy'

